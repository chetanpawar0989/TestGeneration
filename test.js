var subject = require('./subject.js')
var mock = require('mock-fs');
subject.inc(0,undefined);
subject.inc(0,0);
subject.inc(-10,undefined);
subject.inc(-10,0);
subject.weird(7,0,42,"strict");
subject.weird(7,0,42,"strictRANDOM");
subject.weird(7,0,42,"werw");
subject.weird(7,0,42,"werwINDEXOF");
subject.weird(7,0,42,"strictNOTEQUAL");
subject.weird(7,0,38,"strict");
subject.weird(7,0,38,"strictRANDOM");
subject.weird(7,0,38,"werw");
subject.weird(7,0,38,"werwINDEXOF");
subject.weird(7,0,38,"strictNOTEQUAL");
subject.weird(7,-2,42,"strict");
subject.weird(7,-2,42,"strictRANDOM");
subject.weird(7,-2,42,"werw");
subject.weird(7,-2,42,"werwINDEXOF");
subject.weird(7,-2,42,"strictNOTEQUAL");
subject.weird(7,-2,38,"strict");
subject.weird(7,-2,38,"strictRANDOM");
subject.weird(7,-2,38,"werw");
subject.weird(7,-2,38,"werwINDEXOF");
subject.weird(7,-2,38,"strictNOTEQUAL");
subject.weird(10,0,42,"strict");
subject.weird(10,0,42,"strictRANDOM");
subject.weird(10,0,42,"werw");
subject.weird(10,0,42,"werwINDEXOF");
subject.weird(10,0,42,"strictNOTEQUAL");
subject.weird(10,0,38,"strict");
subject.weird(10,0,38,"strictRANDOM");
subject.weird(10,0,38,"werw");
subject.weird(10,0,38,"werwINDEXOF");
subject.weird(10,0,38,"strictNOTEQUAL");
subject.weird(10,-2,42,"strict");
subject.weird(10,-2,42,"strictRANDOM");
subject.weird(10,-2,42,"werw");
subject.weird(10,-2,42,"werwINDEXOF");
subject.weird(10,-2,42,"strictNOTEQUAL");
subject.weird(10,-2,38,"strict");
subject.weird(10,-2,38,"strictRANDOM");
subject.weird(10,-2,38,"werw");
subject.weird(10,-2,38,"werwINDEXOF");
subject.weird(10,-2,38,"strictNOTEQUAL");
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathwithcontent/file1');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/fileExists','pathwithcontent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathwithcontent/file2');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/fileExists','pathwithcontent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/invalidDir','pathwithcontent/file1');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/invalidDir','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/invalidDir','pathwithcontent/file1');
mock.restore();
mock({});
	subject.fileTest('path/invalidDir','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/invalidDir','pathwithcontent/file2');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/invalidDir','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/invalidDir','pathwithcontent/file2');
mock.restore();
mock({});
	subject.fileTest('path/invalidDir','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file1');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file2');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file2');
mock.restore();
subject.normalize('(306) 927-0668 x16611');
subject.normalize('');
subject.normalize('212.380.8270');
subject.format('088-518-5714 x6026','',true);
subject.format('088-518-5714 x6026','',false);
subject.format('088-518-5714 x6026','',{"normalize":false});
subject.format('088-518-5714 x6026','',{"normalize":true});
subject.format('','',true);
subject.format('','',false);
subject.format('','',{"normalize":false});
subject.format('','',{"normalize":true});
subject.format('212.512.9295','',true);
subject.format('212.512.9295','',false);
subject.format('212.512.9295','',{"normalize":false});
subject.format('212.512.9295','',{"normalize":true});
subject.blackListNumber('404-740-9851 x184');
subject.blackListNumber('');
subject.blackListNumber('212.485.7399');
