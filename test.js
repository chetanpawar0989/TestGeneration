var subject = require('./subject.js')
var mock = require('mock-fs');
subject.inc(0,undefined);
subject.inc(0,0);
subject.inc(-7,undefined);
subject.inc(-7,0);
subject.weird(7,0,42,"strict");
subject.weird(7,0,42,"strictRANDOM");
subject.weird(7,0,42,"werw");
subject.weird(7,0,42,"werwINDEXOF");
subject.weird(7,0,42,"strictNOTEQUAL");
subject.weird(7,0,35,"strict");
subject.weird(7,0,35,"strictRANDOM");
subject.weird(7,0,35,"werw");
subject.weird(7,0,35,"werwINDEXOF");
subject.weird(7,0,35,"strictNOTEQUAL");
subject.weird(7,-9,42,"strict");
subject.weird(7,-9,42,"strictRANDOM");
subject.weird(7,-9,42,"werw");
subject.weird(7,-9,42,"werwINDEXOF");
subject.weird(7,-9,42,"strictNOTEQUAL");
subject.weird(7,-9,35,"strict");
subject.weird(7,-9,35,"strictRANDOM");
subject.weird(7,-9,35,"werw");
subject.weird(7,-9,35,"werwINDEXOF");
subject.weird(7,-9,35,"strictNOTEQUAL");
subject.weird(18,0,42,"strict");
subject.weird(18,0,42,"strictRANDOM");
subject.weird(18,0,42,"werw");
subject.weird(18,0,42,"werwINDEXOF");
subject.weird(18,0,42,"strictNOTEQUAL");
subject.weird(18,0,35,"strict");
subject.weird(18,0,35,"strictRANDOM");
subject.weird(18,0,35,"werw");
subject.weird(18,0,35,"werwINDEXOF");
subject.weird(18,0,35,"strictNOTEQUAL");
subject.weird(18,-9,42,"strict");
subject.weird(18,-9,42,"strictRANDOM");
subject.weird(18,-9,42,"werw");
subject.weird(18,-9,42,"werwINDEXOF");
subject.weird(18,-9,42,"strictNOTEQUAL");
subject.weird(18,-9,35,"strict");
subject.weird(18,-9,35,"strictRANDOM");
subject.weird(18,-9,35,"werw");
subject.weird(18,-9,35,"werwINDEXOF");
subject.weird(18,-9,35,"strictNOTEQUAL");
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathwithcontent/file1');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/fileExists','pathwithcontent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathwithcontent/file2');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExists','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/fileExists','pathwithcontent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/invalidDir','pathwithcontent/file1');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/invalidDir','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/invalidDir','pathwithcontent/file1');
mock.restore();
mock({});
	subject.fileTest('path/invalidDir','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/invalidDir','pathwithcontent/file2');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/invalidDir','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/invalidDir','pathwithcontent/file2');
mock.restore();
mock({});
	subject.fileTest('path/invalidDir','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file1');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file1');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{},"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file2');
mock.restore();
mock({"pathwithcontent":{"file1":"text content","file2":""}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file2');
mock.restore();
mock({"path/fileExists":{"file1":""},"path/fileExistsWithNoContents":{}});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExistsWithNoContents','pathwithcontent/file2');
mock.restore();
subject.normalize('');
subject.normalize('212.934.6578');
subject.normalize('(354) 072-1413 x9213');
subject.format('','',true);
subject.format('','',false);
subject.format('','',{"normalize":false});
subject.format('','',{"normalize":true});
subject.format('212.898.4703','',true);
subject.format('212.898.4703','',false);
subject.format('212.898.4703','',{"normalize":false});
subject.format('212.898.4703','',{"normalize":true});
subject.format('054-711-3112 x44777','',true);
subject.format('054-711-3112 x44777','',false);
subject.format('054-711-3112 x44777','',{"normalize":false});
subject.format('054-711-3112 x44777','',{"normalize":true});
subject.blackListNumber('');
subject.blackListNumber('212.240.0079');
subject.blackListNumber('(311) 548-6790');
